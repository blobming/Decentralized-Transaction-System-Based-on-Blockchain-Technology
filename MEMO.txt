		/*
		 * 
		 * 一个全节点的功能														测试情况
		 * 	-> 提供RPC服务
		 * 		-> 发现IP️
		 * 		-> 成为矿工节点
		 * 		-> 发送转账信息
		 * 		-> 查看自己的余额
		 * 		-> 查看区块链情况 + 对交易信息的检验️
		 * 	-> 与其他节点通信️
		 * 		-> 与其他节点通信功能列举
		 * 			-> 1. 发送区块
		 * 			-> 2. 接收区块
		 * 			-> 3. 接收广播交易，生成交易池（如果是矿工节点）
		 * 			-> 4. 挖矿后广播新区块
		 * 			-> 5. 发送握手消息
		 * 			-> 6. 回复握手消息
		 * 	if(数据库中已存在现有区块链)
		 * 		-> 取出现有区块链
		 *  else
		 *		-> 创建第一个块(创世块)
		 *  	-> 初始化区块链
		 *  
		 *  -> 生成UTXO
		 * 	-> 开启网络
		 * 		-> 向邻居发送握手消息，确认版本号与区块链长度
		 * 		-> 邻居回应后更新自己的区块链版本
		 * 		-> 如果自己的区块链比别人的短 向别人广播请求多出来的块
		 * 		-> 接收区块
		 * 		-> if(块已存在||验证不通过)验证比较重要 通过后更改UTXO,修改余额
		 * 			-> 不添加块
		 * 		-> else
		 * 			-> 将块添加到区块链中
		 * 		-> 广播discoverip请求向其他人请求ip地址
		 * 		-> 对外请求ip地址
		 *	-> 对外提供RPC服务
		 *
		 *  -> 矿工节点(optional 如果有愿意当矿工的节点可以选择此选项)
		 *  	-> 接收交易
		 * 			->将交易放入交易池里面
		 * 			->检查交易是否到达n个
		 * 				->组装成 merkle Tree 打包成block
		 * 		-> 挖block，在挖的过程中不断接收新的区块
		 * 		-> 如果发现接收到的区块验证通过并加到区块链里时，
		 * 			新的区块中有与(在正在被挖矿的区块中)相同的交易时
		 * 				-> 放弃挖矿，重新选择交易继续挖矿
		 * 		-> 如果块挖好了 将块打包发布
		 */
		
		
		/*
		 * 一个轻量级节点的功能
		 * 	->连接RPC
		 *  	-> 正常的查看区块链
		 *  	-> 转账
		 *  	-> 依托全节点验证区块
		 *  	-> 查看自己的余额->通过自己的公钥的哈希
		 */
		
		
		
		
		/*
		 * requirements
		 * -> 1. block 以及 transaction 的 toString 方法具体该怎么写 reason:  涉及到block的hash值计算问题
		 * -> 4. 组件代码测试所有函数正确性
		 * -> 5. 写一个手动区块链节点测试整体区块链运行状态
		 * -> 6. 完善RPC功能 开始写RPC手机客户端及桌面级程序
		 * -> 7. 讲服务功能封装成jar包 写commander
		 * 
		 * 
		 * 
		*/